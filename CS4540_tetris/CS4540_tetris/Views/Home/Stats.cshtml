@using Microsoft.AspNetCore.Identity
@using CS4540_tetris.Areas.Identity.Data

@model IEnumerable<CS4540_tetris.Models.PlayerStats>
@inject UserManager<GameUser> UserManager

@{
    ViewData["Title"] = "Player Stats";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!--Welcome text-->
<!--Jumbo tron from https://getbootstrap.com/docs/4.0/components/jumbotron/ -->
<div class="jumbotron jumbotron-fluid">
    <div class="container">
        <h1 class="display-4">Player Stats</h1>
    </div>
</div>

<!--Table in bootstrap with alterations from https://getbootstrap.com/docs/4.0/content/tables/ -->
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th scope="col">
                <!--TODO Make this nickname when it is the user-->
                @Html.DisplayNameFor(model => model.User.NickName)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.HighestScore)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.LastGameDate)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.TotalTimePlayed)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.LongestGame)
            </th>
            <th scope="col">
                @Html.DisplayNameFor(model => model.GamesPlayed)
            </th>
        </tr>

    </thead>
    <tbody>
        <!--For each score display it in order-->
        @foreach (var item in Model)
        {
            //displaying all the high scores
            //TODO have display nickname when using user after being seeded is corrected
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.User.NickName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HighestScore)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastGameDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalTimePlayed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LongestGame)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GamesPlayed)
                </td>
            </tr>

            <tr style="border:3px solid gray">
                <td>
                    Stat Comment:
                </td>
                <td>
                    @{
                        //getting all the stuff ready to do stuff with the PlayerStatNotes table
                        var note_id = 0;
                        var note = "";
                        if (item.Note != null)
                        {
                            note_id = item.Note.NoteID; //or userid with the user seeded
                            note = item.Note.Note;
                        }
                        int statID = (int)item.PlayerStatsID;
                    }
                    <form id="StatNoteForm-@statID" class="StatNoteForm">
                        <textarea id="@statID-@note_id" name="note" rows="2" cols="50">@note</textarea>
                        <br />
                        @{
                            if (item.Note != null)
                            {
                                <p>Note Last Updated @Html.DisplayFor(modelItem => item.Note.TimeModified)</p>
                            }
                            else
                            {
                                <p></p>
                            }
                        }
                        <button type="submit" class="btn-primary">Submit Note</button>
                    </form>
                </td>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
            </tr>
        }
    </tbody>
</table>
@section Scripts
{
    <script>
        $(".StatNoteForm").submit(function(event) {
            event.preventDefault();

            var noteobj = $(this).children("textarea")[0];

            var idstring = noteobj.id;
            var stat = idstring.split("-")[0];
            var note = idstring.split("-")[1];
            var notetext = noteobj.value;

            $.ajax({
                type: "POST",
                url: '@Url.Action("ChangeStatNote", "Home")',
                data: {
                    note_id: note,
                    passednote: notetext,
                    statID: stat
                }
            }).done(function (result) {
                console.log(result);

                noteobj.id = idstring.split("-")[0]+"-"+result.id;
                noteobj.textContent = result.note;

                $("#StatNoteForm-" + idstring.split("-")[0]).children("p")[0].innerHTML = "Note Last Updated " + result.time;

            }).fail(function (jqXHR, textStatus, errorThrown) {
                console.log("failed: ");
                console.log(jqXHR);
                console.log(textStatus);
                console.log(errorThrown);
            });
        });
    </script>
}

