<!--
    Author:    Jaecee Naylor
  Date:      10/18/2019
  Course:    CS 4540, University of Utah, School of Computing
  Copyright: CS 4540 and Jaecee Naylor - This work may not be copied for use in Academic Coursework.

  I, Jaecee Naylor, certify that I wrote this code from scratch and did not copy it in part or whole from
  another source.  Any references used in the completion of the assignment are cited in my README file.
    Purpose: The purpose of this document is to show a professor a specific class's learning outcomes


-->

@using Microsoft.AspNetCore.Identity

@model IEnumerable<CS4540_tetris.Models.PlayerStats>

@{
    ViewData["Title"] = "Player Stats";
}

@section Scripts
        {
    <script src="~/js/Note.js"></script>
}
<!DOCTYPE html>



<html>

<!--Head of document-->
<head>
    <meta charset="UTF-8" />
    <meta name="description" content="Player Stats of Player's playing Tetrominoes" />
    <meta name="keywords" content="HTML, CSS" />
    <meta name="author" content="Jaecee Naylor" />
    <!--Used to change with size of device-->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>High Scores</title>
</head>

<!--Page info-->
<body>
    <!--Welcome text-->
    <!--Jumbo tron from https://getbootstrap.com/docs/4.0/components/jumbotron/ -->
    <div class="jumbotron jumbotron-fluid">
        <div class="container">
            <h1 class="display-4">Player Stats</h1>
        </div>
    </div>

    <!--Table in bootstrap with alterations from https://getbootstrap.com/docs/4.0/content/tables/ -->
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th scope="col">
                    <!--TODO Make this nickname when it is the user-->
                    @Html.DisplayNameFor(model => model.UserName)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.HighestScore)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.LastGameDate)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.TotalTimePlayed)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.LongestGame)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.GamesPlayed)
                </th>
            </tr>

        </thead>
        <tbody>
            <!--For each score display it in order-->
            @foreach (var item in Model)
            {
                //displaying all the high scores
                //TODO have display nickname when using user after being seeded is corrected
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HighestScore)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastGameDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TotalTimePlayed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LongestGame)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.GamesPlayed)
                    </td>
                </tr>

                <tr style="border:3px solid gray">
                    <td>
                        Stat Comment:
                    </td>
                    <td>
                        @{
                            //getting all the stuff ready to do stuff with the PlayerStatNotes table
                            var note_id = -1;
                            var note = "";
                            if (item.Note != null)
                            {
                                note_id = item.Note.noteID; //or userid with the user seeded
                                note = item.Note.note;
                            }
                        }
                        @{
                            int statID = (int)item.PlayerStatsID;
                        }
                        <form onsubmit="submit_PlayerStatsNote(event,@note_id,@statID)" aspaction="ChangeStatNote" method="POST">
                            <textarea id="note" name="note" rows="2" cols="50">
                                        @note
                                    </textarea>
                            <br />
                            <input type="submit">
                        </form>
                    </td>
                    <td>
                        @{

                            //beginning implementation of how to display last time modified for lo note
                            var lastUpdatedNote = " Note Last Modified: ";
                            if (item.Note != null)
                            {
                                lastUpdatedNote += item.Note.Time_Modified.ToString();
                            }
                            else
                            {
                                lastUpdatedNote += "N/A";
                            }
                        }
                        @lastUpdatedNote
                    </td>
                    <td>
                        @{

                            //beginning implementation of how to display last time modified for lo note
                            var lastUserUpdatedNote = "Note by User: ";
                            if (item.Note != null)
                            {
                                lastUserUpdatedNote += item.Note.gameUser.UserName.ToString();
                            }
                            else
                            {
                                lastUserUpdatedNote += "N/A";
                            }
                        }
                        @lastUserUpdatedNote
                    </td>
                    <td>
                    </td>
                    <td>
                    </td>
                </tr>
            }
        </tbody>
    </table>

</body>
</html>

